server:
  port: ${SERVER_PORT}

spring:
  application:
    name: raspi-finance-endpoint
  profiles:
    active: prod

  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    url: ${DATASOURCE}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: ${DATASOURCE_DRIVER}
    # testWhileIdle to persist the connection when idle for a long period of time
    tomcat:
      test-While-Idle: true
      validation-Query: SELECT 1
    platform: ${DATASOURCE_PLATFORM}
    continue-On-Error: false
    # enable initialization-mode flag to always if you want to utilize data.sql and schema.sql
    #initialization-mode: always
    initialization-mode: never

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
  jpa:
    show-sql: false
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: ${HIBERNATE_DDL}
    properties:
      hibernate:
        jdbc:
          time_zone: UTC

logging:
  level.org.hibernate.SQL: WARN

#spring.jpa.hibernate.ddl-auto: none
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#none is build from schema.sql (no Java classes)
#update only add new tables in the schema.sql (starting from Java classes)

#kebab-case '-' separated

management:
  endpoint:
    health:
      show-details: always

